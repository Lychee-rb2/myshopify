name: Test storefront

on:
  pull_request:
    branches:
      - main
    paths:
      - "store/**"
      - ".github/workflows/test.yml"

defaults:
  run:
    working-directory: ./store

jobs:
  prepare_dependencies:
    name: Prepare dependencies
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - windows-latest
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set node version to 16.14
        uses: actions/setup-node@v2
        with:
          node-version: 16.14

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

  validate:
    name: Validate
    needs: prepare_dependencies
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set node version to 16.14
        uses: actions/setup-node@v2
        with:
          node-version: 16.14

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i --shamefully-hoist

      - name: Run linter
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Build storefront
        run: SERVER_TARGET_NODE=true pnpm build
